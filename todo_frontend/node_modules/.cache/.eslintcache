[{"/data/data/com.termux/files/home/programs/js/todo_api/todo_frontend/src/index.js":"1","/data/data/com.termux/files/home/programs/js/todo_api/todo_frontend/src/App.jsx":"2","/data/data/com.termux/files/home/programs/js/todo_api/todo_frontend/src/TodoList.jsx":"3","/data/data/com.termux/files/home/programs/js/todo_api/todo_frontend/src/Todo.jsx":"4"},{"size":301,"mtime":1666450233119,"results":"5","hashOfConfig":"6"},{"size":2881,"mtime":1666951824170,"results":"7","hashOfConfig":"6"},{"size":292,"mtime":1666915352494,"results":"8","hashOfConfig":"6"},{"size":1937,"mtime":1666951650310,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"14765eo",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/data/data/com.termux/files/home/programs/js/todo_api/todo_frontend/src/index.js",[],[],[],"/data/data/com.termux/files/home/programs/js/todo_api/todo_frontend/src/App.jsx",[],[],"/data/data/com.termux/files/home/programs/js/todo_api/todo_frontend/src/TodoList.jsx",[],[],"/data/data/com.termux/files/home/programs/js/todo_api/todo_frontend/src/Todo.jsx",["24","25"],[],"import { Button, Form, InputGroup, } from \"react-bootstrap\";\nimport { useEffect, useRef, useState } from 'react'\nimport { AiFillEdit, AiFillDelete, AiOutlineMore } from 'react-icons/ai'\nimport { IoMdDoneAll } from 'react-icons/io'\n\nexport default function Todo({ todo: { id, name, checked }, actions: { checkTodo, deleteTodo, editTodo } }) {\n\n  const [isEditing, setEditing] = useState(false)\n\n  const [editText, setEditText] = useState(name)\n\n  const [isMore, setMore] = useState(false)\n\n  function handleCheck() {\n    checkTodo(id)\n  }\n\n  function handleDelete() {\n    deleteTodo(id)\n  }\n\n  function handleEditDone() {\n    if (editText === \"\") {\n      return\n    }\n    editTodo(id, editText)\n    setEditing(false)\n  }\n\n  return (\n    <InputGroup className=\"todo-item\" >\n      {isEditing ?\n        <>\n          <Form.Control autoFocus onChange={(e) => setEditText(e.target.value)} value={editText} />\n\n          <Button\n            onClick={handleEditDone}\n            variant=\"success\" >\n            <IoMdDoneAll />\n          </Button>\n        </>\n        :\n        <>\n          <InputGroup.Checkbox\n            className=\"checkbox\"\n            checked={checked}\n            onChange={handleCheck} />\n          <InputGroup.Text className=\"todo-text\">{name}</InputGroup.Text>\n\n          {isMore && (\n            <>\n              <Button\n                onClick={() => setEditing(true)}\n                variant=\"warning\"\n              >\n                <AiFillEdit />\n              </Button>\n\n              <Button\n                onClick={handleDelete}\n                variant=\"danger\"\n              >\n                <AiFillDelete />\n              </Button>\n            </>\n          )}\n          <Button\n            onBlur={() => setTimeout(() => setMore(false), 0)}\n            onClick={() => setMore(isMore ? false : true)}\n          >\n            <AiOutlineMore />\n          </Button>\n\n\n        </>\n      }\n    </InputGroup>\n  )\n}\n",{"ruleId":"26","severity":1,"message":"27","line":2,"column":10,"nodeType":"28","messageId":"29","endLine":2,"endColumn":19},{"ruleId":"26","severity":1,"message":"30","line":2,"column":21,"nodeType":"28","messageId":"29","endLine":2,"endColumn":27},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used."]