{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/programs/js/todo_api/todo_frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport TodoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const refresh = () => {\n      fetch('api/?format=json').then(res => res.json()).then(res => setTodos(res));\n    };\n    refresh();\n    setInterval(refresh, 1000);\n  }, []);\n  const addTodo = useRef();\n  function handleAddTodo() {\n    const name = addTodo.current.value;\n    if (name === \"\") {\n      return;\n    }\n    let id = todos.map(_ref => {\n      let {\n        id\n      } = _ref;\n      return id;\n    }).reduce((pre, cur) => cur > pre ? cur : pre, 0);\n    id++;\n    const todo = {\n      id,\n      name,\n      checked: false\n    };\n    addTodo.current.value = null;\n    fetch(`api/${todo.id}/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(todo)\n    }).then(res => res.json()).then(res => setTodos(res));\n  }\n  function checkTodo(todoId) {\n    const newTodos = [...todos];\n    const target = newTodos.find(_ref2 => {\n      let {\n        id\n      } = _ref2;\n      return todoId === id;\n    });\n    target.checked = !target.checked;\n    fetch(`api/${todoId}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(target)\n    }).then(res => res.json()).then(res => setTodos(res));\n  }\n  function deleteTodo(todoId) {\n    fetch(`api/${todoId}/`, {\n      method: 'DELETE'\n    }).then(res => res.json()).then(res => setTodos(res));\n  }\n  function editTodo(todoId, newName) {\n    let newTodos = [...todos];\n    const target = newTodos.find(_ref3 => {\n      let {\n        id\n      } = _ref3;\n      return todoId === id;\n    });\n    target.name = newName;\n    fetch(`api/${todoId}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(target)\n    }).then(res => res.json()).then(res => setTodos(res));\n  }\n  function handleClearCkecked() {\n    setTodos(oldTodos => {\n      return oldTodos.filter(_ref4 => {\n        let {\n          checked,\n          id\n        } = _ref4;\n        if (checked) {\n          fetch(`api/${id}/`, {\n            method: 'DELETE'\n          });\n        }\n        return !checked;\n      });\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"There are \", todos.filter(_ref5 => {\n        let {\n          checked\n        } = _ref5;\n        return !checked;\n      }).length, \" tasks left todo!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        ref: addTodo,\n        type: \"text\",\n        maxLength: 255\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleAddTodo,\n        children: /*#__PURE__*/_jsxDEV(AiOutlinePlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClearCkecked,\n      className: \"clear-btn w-100\",\n      variant: \"info\",\n      children: \"Clear Checked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      actions: {\n        checkTodo,\n        deleteTodo,\n        editTodo\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"6APeP7TAWXXPrm70klH2i8lZbl0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","useEffect","Button","Form","InputGroup","AiOutlinePlus","TodoList","App","todos","setTodos","refresh","fetch","then","res","json","setInterval","addTodo","handleAddTodo","name","current","value","id","map","reduce","pre","cur","todo","checked","method","headers","body","JSON","stringify","checkTodo","todoId","newTodos","target","find","deleteTodo","editTodo","newName","handleClearCkecked","oldTodos","filter","length"],"sources":["/data/data/com.termux/files/home/programs/js/todo_api/todo_frontend/src/App.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\nimport { AiOutlinePlus } from 'react-icons/ai'\nimport TodoList from './TodoList';\n\nexport default function App() {\n\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    const refresh = () => {\n      fetch('api/?format=json')\n        .then(res => res.json())\n        .then(res => setTodos(res))\n    }\n    refresh()\n    setInterval(refresh, 1000)\n  }, [])\n\n  const addTodo = useRef();\n\n  function handleAddTodo() {\n    const name = addTodo.current.value;\n    if (name === \"\") {\n      return\n    }\n    let id = todos\n      .map(({ id }) => id)\n      .reduce((pre, cur) => cur > pre ? cur : pre, 0)\n    id++\n    const todo = {\n      id,\n      name,\n      checked: false\n    }\n\n    addTodo.current.value = null\n\n    fetch(`api/${todo.id}/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(todo),\n    })\n      .then(res => res.json())\n      .then(res => setTodos(res))\n  }\n\n  function checkTodo(todoId) {\n    const newTodos = [...todos]\n    const target = newTodos.find(({ id }) => todoId === id)\n    target.checked = !target.checked\n\n    fetch(`api/${todoId}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(target),\n    })\n      .then(res => res.json())\n      .then(res => setTodos(res))\n  }\n\n  function deleteTodo(todoId) {\n    fetch(`api/${todoId}/`, { method: 'DELETE' })\n      .then(res => res.json())\n      .then(res => setTodos(res))\n  }\n\n  function editTodo(todoId, newName) {\n    let newTodos = [...todos]\n    const target = newTodos.find(({ id }) => todoId === id)\n    target.name = newName\n\n    fetch(`api/${todoId}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(target),\n    })\n      .then(res => res.json())\n      .then(res => setTodos(res))\n  }\n\n  function handleClearCkecked() {\n    setTodos(oldTodos => {\n      return oldTodos.filter(({ checked, id }) => {\n        if (checked) {\n          fetch(`api/${id}/`, { method: 'DELETE' })\n        }\n        return !checked\n      })\n    })\n  }\n\n  return (\n    <>\n      <h1>There are {todos.filter(({ checked }) => !checked).length} tasks left todo!</h1>\n\n      <InputGroup>\n        <Form.Control\n          ref={addTodo}\n          type=\"text\"\n          maxLength={255}\n        />\n\n        <Button variant=\"secondary\" onClick={handleAddTodo}>\n          <AiOutlinePlus />\n        </Button>\n      </InputGroup>\n\n      <Button\n        onClick={handleClearCkecked}\n        className=\"clear-btn w-100\"\n        variant=\"info\"\n      >\n        Clear Checked\n      </Button>\n\n      <TodoList\n        todos={todos}\n        actions={{ checkTodo, deleteTodo, editTodo }}\n      />\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,MAAM,EAAEC,IAAI,EAAEC,UAAU,QAAQ,iBAAiB;AAC1D,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAAA;AAElC,eAAe,SAASC,GAAG,GAAG;EAAA;EAE5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCE,SAAS,CAAC,MAAM;IACd,MAAMS,OAAO,GAAG,MAAM;MACpBC,KAAK,CAAC,kBAAkB,CAAC,CACtBC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACC,GAAG,IAAIJ,QAAQ,CAACI,GAAG,CAAC,CAAC;IAC/B,CAAC;IACDH,OAAO,EAAE;IACTK,WAAW,CAACL,OAAO,EAAE,IAAI,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,OAAO,GAAGhB,MAAM,EAAE;EAExB,SAASiB,aAAa,GAAG;IACvB,MAAMC,IAAI,GAAGF,OAAO,CAACG,OAAO,CAACC,KAAK;IAClC,IAAIF,IAAI,KAAK,EAAE,EAAE;MACf;IACF;IACA,IAAIG,EAAE,GAAGb,KAAK,CACXc,GAAG,CAAC;MAAA,IAAC;QAAED;MAAG,CAAC;MAAA,OAAKA,EAAE;IAAA,EAAC,CACnBE,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKA,GAAG,GAAGD,GAAG,GAAGC,GAAG,GAAGD,GAAG,EAAE,CAAC,CAAC;IACjDH,EAAE,EAAE;IACJ,MAAMK,IAAI,GAAG;MACXL,EAAE;MACFH,IAAI;MACJS,OAAO,EAAE;IACX,CAAC;IAEDX,OAAO,CAACG,OAAO,CAACC,KAAK,GAAG,IAAI;IAE5BT,KAAK,CAAE,OAAMe,IAAI,CAACL,EAAG,GAAE,EAAE;MACvBO,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC3B,CAAC,CAAC,CACCd,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACC,GAAG,IAAIJ,QAAQ,CAACI,GAAG,CAAC,CAAC;EAC/B;EAEA,SAASoB,SAAS,CAACC,MAAM,EAAE;IACzB,MAAMC,QAAQ,GAAG,CAAC,GAAG3B,KAAK,CAAC;IAC3B,MAAM4B,MAAM,GAAGD,QAAQ,CAACE,IAAI,CAAC;MAAA,IAAC;QAAEhB;MAAG,CAAC;MAAA,OAAKa,MAAM,KAAKb,EAAE;IAAA,EAAC;IACvDe,MAAM,CAACT,OAAO,GAAG,CAACS,MAAM,CAACT,OAAO;IAEhChB,KAAK,CAAE,OAAMuB,MAAO,GAAE,EAAE;MACtBN,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACI,MAAM;IAC7B,CAAC,CAAC,CACCxB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACC,GAAG,IAAIJ,QAAQ,CAACI,GAAG,CAAC,CAAC;EAC/B;EAEA,SAASyB,UAAU,CAACJ,MAAM,EAAE;IAC1BvB,KAAK,CAAE,OAAMuB,MAAO,GAAE,EAAE;MAAEN,MAAM,EAAE;IAAS,CAAC,CAAC,CAC1ChB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACC,GAAG,IAAIJ,QAAQ,CAACI,GAAG,CAAC,CAAC;EAC/B;EAEA,SAAS0B,QAAQ,CAACL,MAAM,EAAEM,OAAO,EAAE;IACjC,IAAIL,QAAQ,GAAG,CAAC,GAAG3B,KAAK,CAAC;IACzB,MAAM4B,MAAM,GAAGD,QAAQ,CAACE,IAAI,CAAC;MAAA,IAAC;QAAEhB;MAAG,CAAC;MAAA,OAAKa,MAAM,KAAKb,EAAE;IAAA,EAAC;IACvDe,MAAM,CAAClB,IAAI,GAAGsB,OAAO;IAErB7B,KAAK,CAAE,OAAMuB,MAAO,GAAE,EAAE;MACtBN,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACI,MAAM;IAC7B,CAAC,CAAC,CACCxB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACC,GAAG,IAAIJ,QAAQ,CAACI,GAAG,CAAC,CAAC;EAC/B;EAEA,SAAS4B,kBAAkB,GAAG;IAC5BhC,QAAQ,CAACiC,QAAQ,IAAI;MACnB,OAAOA,QAAQ,CAACC,MAAM,CAAC,SAAqB;QAAA,IAApB;UAAEhB,OAAO;UAAEN;QAAG,CAAC;QACrC,IAAIM,OAAO,EAAE;UACXhB,KAAK,CAAE,OAAMU,EAAG,GAAE,EAAE;YAAEO,MAAM,EAAE;UAAS,CAAC,CAAC;QAC3C;QACA,OAAO,CAACD,OAAO;MACjB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEA,oBACE;IAAA,wBACE;MAAA,yBAAenB,KAAK,CAACmC,MAAM,CAAC;QAAA,IAAC;UAAEhB;QAAQ,CAAC;QAAA,OAAK,CAACA,OAAO;MAAA,EAAC,CAACiB,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,eAEpF,QAAC,UAAU;MAAA,wBACT,QAAC,IAAI,CAAC,OAAO;QACX,GAAG,EAAE5B,OAAQ;QACb,IAAI,EAAC,MAAM;QACX,SAAS,EAAE;MAAI;QAAA;QAAA;QAAA;MAAA,QACf,eAEF,QAAC,MAAM;QAAC,OAAO,EAAC,WAAW;QAAC,OAAO,EAAEC,aAAc;QAAA,uBACjD,QAAC,aAAa;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACV;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eAEb,QAAC,MAAM;MACL,OAAO,EAAEwB,kBAAmB;MAC5B,SAAS,EAAC,iBAAiB;MAC3B,OAAO,EAAC,MAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGP,eAET,QAAC,QAAQ;MACP,KAAK,EAAEjC,KAAM;MACb,OAAO,EAAE;QAAEyB,SAAS;QAAEK,UAAU;QAAEC;MAAS;IAAE;MAAA;MAAA;MAAA;IAAA,QAC7C;EAAA,gBACD;AAEP;AAAC,GA3HuBhC,GAAG;AAAA,KAAHA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}